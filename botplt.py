from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

# Token de tu bot
TOKEN = "7749919832:AAGeUSe3Us1Pc2exRjw59172Z2W-MbRpw6M"

# Diccionario de preguntas y respuestas
questions = {
    "q1": ("¬øQu√© son las plaquetas y cu√°l es su funci√≥n en la sangre?",
           "Las plaquetas son fragmentos de c√©lulas que ayudan a la coagulaci√≥n de la sangre. Juegan un papel crucial en la detenci√≥n del sangrado."),
    "q2": ("¬øCu√°les son los requisitos para donar plaquetas?",
           "Para donar plaquetas, debes tener entre 18 y 60 a√±os, estar en buen estado de salud, y tener un peso adecuado seg√∫n la normativa."),
    "q3": ("¬øCu√°nto tiempo debe pasar entre una donaci√≥n de plaquetas y otra?",
           "Normalmente, debes esperar al menos 15 d√≠as entre donaciones de plaquetas."),
    "q4": ("¬øC√≥mo se extraen las plaquetas del donante?",
           "Las plaquetas se extraen mediante un procedimiento llamado af√©resis, que se realiza a trav√©s de una m√°quina especializada."),
    "q5": ("¬øQu√© beneficios tiene la donaci√≥n de plaquetas para los pacientes?",
           "Las plaquetas son esenciales para tratar a pacientes con leucemia y otros trastornos hematol√≥gicos, ayudando a prevenir hemorragias peligrosas."),
    "q6": ("¬øSi sufro de alguna enfermedad puedo donar?",
           "Depende de la enfermedad. Algunas condiciones de salud pueden hacerte inelegible para donar, pero se realiza una evaluaci√≥n antes de cada donaci√≥n."),
    "q7": ("¬øCada cu√°nto se renuevan mis plaquetas?",
           "Las plaquetas se regeneran en un plazo aproximado de 48 horas despu√©s de la donaci√≥n."),
    "q8": ("¬øCu√°nto dura el proceso de donaci√≥n?",
           "El proceso de donaci√≥n puede durar entre 1 y 2 horas, dependiendo del m√©todo utilizado y la condici√≥n del donante."),
    "q9": ("¬øQu√© requisitos tiene?", 
           "Ser mayor de 18 a√±os, pesar m√°s de 50 kg y estar en buen estado de salud."),
    "q10": ("¬øQu√© es la donaci√≥n de plaquetas?",
            "Es un proceso en el cual se extraen plaquetas de un donante, las cuales son utilizadas para tratar a personas con condiciones m√©dicas que afectan la coagulaci√≥n de la sangre.")
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Muestra el men√∫ con las preguntas disponibles."""
    keyboard = [
        [InlineKeyboardButton(text=question, callback_data=qid)]
        for qid, (question, _) in questions.items()
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    greeting = (
        "Hola, soy *PlasmaBot* ü©∏\n\n"
        "Selecciona una pregunta sobre la donaci√≥n de plaquetas y te dar√© la respuesta:"
    )
    await update.message.reply_text(greeting, reply_markup=reply_markup, parse_mode="Markdown")

async def handle_answer(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Muestra la respuesta de la pregunta seleccionada."""
    query = update.callback_query
    await query.answer()
    
    qid = query.data
    question, answer = questions.get(qid, ("Pregunta no encontrada", "No tengo una respuesta para eso."))

    # Responder con la respuesta a la pregunta seleccionada
    await query.edit_message_text(f"*{question}*\n\n{answer}", parse_mode="Markdown")

    # Volver a mostrar el men√∫ de preguntas
    await query.message.reply_text(
        "¬øTe gustar√≠a saber algo m√°s? Selecciona otra pregunta:",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton(text=q, callback_data=key)]
            for key, (q, _) in questions.items()
        ])
    )

def main():
    """Configuraci√≥n del bot."""
    application = Application.builder().token(TOKEN).build()

    # Agregar los controladores
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(handle_answer))

    # Iniciar el bot
    application.run_polling(drop_pending_updates=True)

if __name__ == "__main__":
    main()
