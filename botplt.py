from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CommandHandler, CallbackQueryHandler, Application, ContextTypes
import os

# TOKEN del bot
TOKEN = os.getenv("TELEGRAM_TOKEN", "7749919832:AAGeUSe3Us1Pc2exRjw59172Z2W-MbRpw6M")  # Mejor si lo pones como variable de entorno

# Lista de preguntas y respuestas
questions = {
    "Â¿QuÃ© son las plaquetas y cuÃ¡l es su funciÃ³n en la sangre?": "Son fragmentos celulares que ayudan en la coagulaciÃ³n de la sangre.",
    "Â¿CuÃ¡les son los requisitos para donar plaquetas?": "Tener entre 18 y 60 aÃ±os, buen estado de salud y peso adecuado.",
    "Â¿CuÃ¡nto tiempo debe pasar entre una donaciÃ³n de plaquetas y otra?": "Generalmente, al menos 15 dÃ­as.",
    "Â¿CÃ³mo se extraen las plaquetas del donante?": "Mediante un proceso llamado afÃ©resis.",
    "Â¿QuÃ© beneficios tiene la donaciÃ³n de plaquetas para los pacientes?": "Ayuda a pacientes con enfermedades como leucemia y otros trastornos hematolÃ³gicos.",
    "Â¿Si sufro de alguna enfermedad puedo donar?": "Depende de la enfermedad, algunas condiciones pueden impedir la donaciÃ³n.",
    "Â¿Cada cuÃ¡nto se renuevan mis plaquetas?": "Las plaquetas se regeneran en aproximadamente 48 horas.",
    "Â¿CuÃ¡nto dura el proceso de donaciÃ³n?": "El proceso dura entre 1 y 2 horas dependiendo del mÃ©todo utilizado.",
    "Â¿QuÃ© requisitos tiene?": "Ser mayor de 18 aÃ±os, pesar mÃ¡s de 50 kg y estar en buen estado de salud.",
    "Â¿QuÃ© es la donaciÃ³n de plaquetas?": "Es un procedimiento en el que se extraen plaquetas de un donante mediante afÃ©resis para ayudar a pacientes necesitados."
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Muestra el menÃº de preguntas como botones."""
    keyboard = []
    for question in questions.keys():
        keyboard.append([InlineKeyboardButton(text=question, callback_data=question)])

    reply_markup = InlineKeyboardMarkup(keyboard)

    greeting = (
        "Hola, soy *PlasmaBot* ðŸ©¸\n\n"
        "Selecciona una pregunta sobre la donaciÃ³n de plaquetas y te darÃ© la respuesta:"
    )
    await update.message.reply_text(greeting, reply_markup=reply_markup, parse_mode="Markdown")

async def handle_question(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Muestra la respuesta a la pregunta seleccionada."""
    query = update.callback_query
    await query.answer()

    question = query.data
    answer = questions.get(question, "Lo siento, no tengo respuesta para esa pregunta.")

    await query.edit_message_text(f"*{question}*\n\n{answer}", parse_mode="Markdown")

# ConfiguraciÃ³n del bot
def main():
    application = Application.builder().token(TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(handle_question))

    print("âœ… Bot iniciado correctamente")
    application.run_polling()

if __name__ == "__main__":
    main()

